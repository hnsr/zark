
// This macro magic allows me to define the variables I want to expose in one place (this file),
// instead of  having to maintain the extern declarations, definitions, and array initializers
// seperately..
//
// This could be replaced by a more elegant and dynamic system, but it wouldn't let the code use
// simple C variables for these settings without having to dynamically register them in various
// *init functions (and suffer possible chicken-and-egg problems).


#if defined(MAKE_EXTERNDECLS)
    #define    int_var(name, def, min, max, desc) extern int   name;
    #define  float_var(name, def, min, max, desc) extern float name;
    #define float3_var(name, a,b,c,         desc) extern float name[3];
    #define float4_var(name, a,b,c,d,       desc) extern float name[4];
    #define string_var(name, def,           desc) extern char  name[Z_VAR_STRING_SIZE];
#elif defined(MAKE_DEFINITIONS)
    #define    int_var(name, def, min, max, desc) int   name    = (def);
    #define  float_var(name, def, min, max, desc) float name    = (def);
    #define float3_var(name, a,b,c,         desc) float name[3] = {a, b, c};
    #define float4_var(name, a,b,c,d,       desc) float name[4] = {a, b, c, d};
    #define string_var(name, def,           desc) char  name[Z_VAR_STRING_SIZE] = (def);
#elif defined(MAKE_ARRAYINITS)
    #define    int_var(name, def, min, max, desc) {Z_VAR_TYPE_INT,    (void *)&name, #name, desc, def,   0, {0, 0, 0}, {0, 0, 0, 0}, NULL, min, max,   0,   0 },
    #define  float_var(name, def, min, max, desc) {Z_VAR_TYPE_FLOAT,  (void *)&name, #name, desc,   0, def, {0, 0, 0}, {0, 0, 0, 0}, NULL,   0,   0, min, max },
    #define float3_var(name, a,b,c,         desc) {Z_VAR_TYPE_FLOAT3, (void *)name,  #name, desc,   0,   0, {a, b, c}, {0, 0, 0, 0}, NULL,   0,   0,   0,   0 },
    #define float4_var(name, a,b,c,d,       desc) {Z_VAR_TYPE_FLOAT4, (void *)name,  #name, desc,   0,   0, {0, 0, 0}, {a, b, c, d}, NULL,   0,   0,   0,   0 },
    #define string_var(name, def,           desc) {Z_VAR_TYPE_STRING, (void *)name,  #name, desc,   0,   0, {0, 0, 0}, {0, 0, 0, 0},  def,   0,   0,   0,   0 },
#else
    #error Included variables.def without required MAKE_ macro set
#endif

//         name             default     [min   max]  description
   int_var(r_fullscreen,          0,      0,     1, "Set this to use a fullscreen window.")
   int_var(r_screenwidth,       800,      1, 99999, "Screen width in fullscreen mode.")
   int_var(r_screenheight,      600,      1, 99999, "Screen height in fullscreen mode.")
   int_var(r_screenrefresh,       0,      0,   999, "Screen refresh rate in fullscreen mode. Set to 0 to use default.")
   int_var(r_winwidth,          800,      1, 99999, "Viewport width in windowed mode.")
   int_var(r_winheight,         600,      1, 99999, "Viewport height in windowed mode.")
   int_var(r_swapinterval,        0,      0, 99999, "Buffer swap interval (0 = vsync off, 1 = vsync on).")
   int_var(r_depthbuffer,         1,      0,     1, "Create OpenGL visual with depth buffer if set to 1.")
   int_var(r_stencilbuffer,       1,      0,     1, "Create OpenGL visual with stencil buffer if set to 1.")
   int_var(r_doublebuffer,        1,      0,     1, "Create double buffered OpenGL visual if set to 1.")
   int_var(r_clearcolor,          0,      0,     1, "Clear color buffer every frame.")
   int_var(r_mipmap,              1,      0,     1, "Build mipmaps when loading textures if set to 1.")
   int_var(r_matdisplaylist,      1,      0,     1, "Use display lists for material state changes.")
   int_var(r_shaderlog,           0,      0,     1, "Print compilation log for compiled shaders even if succesful.")
   int_var(r_noshaders,           0,      0,     1, "Prevents use of GLSL shaders when set to 1.")
 float_var(r_aspectratio,         0,      0,   100, "If not set to 0, overrides the aspect ratio of the viewport dimensions.")
 float_var(r_maxfps,              0,      0, 99999, "Maximum frames per second rendered. Set to 0 to disable FPS limiting.")
 float_var(r_nearplane,       0.001, 0.0001,  9999, "Distance of near frustrum plane.")
 float_var(r_farplane,         1000, 0.0001, 99999, "Distance of far frustrum plane.")
 float_var(r_skydepthsize,     0.05,      0,     1, "Size of the depthrange used for skybox drawing.")
 float_var(r_normalscale,       0.1,      0,   100, "Scale factor used when drawing normal vectors.")
 float_var(r_mipmapbias,       -0.5,    -10,    10, "Texture mipmap LOD bias.")
   int_var(r_nofill,              0,      0,     1, "Don't draw filled polygons if set to 1.")
   int_var(r_nosky,               0,      0,     1, "Don't draw sky if set to 1.")
   int_var(r_drawaxis,            0,      0,     1, "Draw XYZ axes if set to 1.")
   int_var(r_drawwires,           0,      0,     1, "Draw wireframe if set to 1.")
   int_var(r_drawvertices,        0,      0,     1, "Draw vertices if set to 1.")
   int_var(r_drawtangents,        0,      0,     1, "Draw tangent vectors if set to 1.")
   int_var(r_drawnormals,         0,      0,     1, "Draw normal vectors if set to 1.")
   int_var(r_windebug,            0,      0,     1, "Debug window creation/display mode setting.")
   int_var(in_debug,              0,      0,     1, "Debug keyboard/mouse events.")
string_var(in_ungrabkey, "KEY_LALT",                "If set to a key name, ungrabs input when it is held down (for things like ALT-TAB).")
 float_var(m_sensitivity,         1,      0,   100, "Mouse sensitivity factor.")
   int_var(fs_printdiskload,      0,      0,     1, "Debug loading of resources.")
   int_var(fs_nosave,             0,      0,     1, "Set this to prevent writing config/keybindings on exit.")
   int_var(printfps,              0,      0,     1, "Set this to have FPS printed at fixed intervals.")
 float_var(printfpstime,       3000,      1, 99999, "FPS printing interval in milliseconds.")
 float_var(movespeed,             1,      0, 10000, "Camera movement speed factor.")
float3_var(test_f3,           1,1,1, "Testvar.")
float4_var(test_f4,         1,1,1,1, "Testvar.")
string_var(test_str,   "teststring", "Testvar.")


#undef int_var
#undef float_var
#undef float3_var
#undef float4_var
#undef string_var
